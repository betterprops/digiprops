@model PropertyManagementTool.Models.PropertyEditViewModel
@{
    ViewBag.Title = "Edit Property";
}
<br/>
<h5>@ViewBag.Title</h5>
<hr />

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.AntiForgeryToken()
    
    @Html.HiddenFor(m => m.Id)

    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(m => m.Address, new { @class = "control-label" })
        </div>
        <div class="col-md-6">
            @Html.TextBoxFor(m => m.Address, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(m => m.Size, new { @class = "control-label" })
        </div>

        <div class="col-md-6">
            @Html.TextBoxFor(m => m.Size, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Size, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-2">
            @Html.LabelFor(m => m.Bedrooms, new { @class = "control-label" })
        </div>

        <div class="col-md-6">
            @Html.TextBoxFor(m => m.Bedrooms, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Bedrooms, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-2">
            @Html.LabelFor(m => m.Bathrooms, new { @class = "control-label" })
        </div>

        <div class="col-md-6">
            @Html.TextBoxFor(m => m.Bathrooms, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Bathrooms, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-2">
            @Html.LabelFor(m => m.Description, new { @class = "control-label" })
        </div>

        <div class="col-md-6">
            @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">

        <div class="col-md-2">
            @Html.LabelFor(m => m.PropertyStatusId, new { @class = "control-label" })
        </div>

        <div class="col-md-6">
            @Html.DropDownListFor(m => m.PropertyStatusId, (SelectList)ViewBag.PropertyStatusList, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.PropertyStatusId, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-2">
            @Html.LabelFor(m => m.SelectedFeatures, new { @class = "control-label" })
        </div>
        <div class="col-md-6">
            @foreach (var item in ((IEnumerable<PropertyManagementTool.Service.Models.FeatureModel>)ViewBag.Features))
            {
                <div class="checkbox">
                    <label>
                        @if (Model.Features.Select(x => x.FeatureId).Contains(item.FeatureId))
                        {
                            <input type="checkbox" checked name="SelectedFeatures" value="@item.FeatureId" /> @item.Description
                        }
                        else
                        {
                            <input type="checkbox" name="SelectedFeatures" value="@item.FeatureId" /> @item.Description
                        }
                        </label>
                    </div>
            }
            @Html.ValidationMessageFor(m => m.SelectedFeatures)
        </div>
    </div>
    <div class="form-group">
        <input type="submit" class="btn btn-primary" value="Save" />
        @Html.ActionLink("Cancel", "Details", new { pId = Model.Id }, new { @class= "btn btn-secondary" })
    </div>
}
